{"version":3,"sources":["deser.js"],"names":["deser","config","serialize","bind","deserialize","data","result","handleData","serializeDoc","doc","key","fields","hasOwnProperty","val","serializedDoc","deserializeDoc","deserializedDoc","fn","Array","map","Error"],"mappings":"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","file":"deser.js","sourcesContent":["function deser(config) {\n  return {\n    serialize: serialize.bind(config),\n    deserialize: deserialize.bind(config),\n  }\n}\n\nfunction serialize(data) {\n  let result = handleData(data, serializeDoc.bind(this));\n\n  return result;\n}\n\nfunction serializeDoc(doc) {\n  let result = {};\n\n  for (let key in this.fields) {\n    if (this.fields.hasOwnProperty(key)) {\n      let val = this.fields[key];\n\n      result[val] = doc[key];\n    }\n  }\n\n  if (typeof this.serialize === 'function') {\n    let serializedDoc = this.serialize(doc);\n\n    for (let key in serializedDoc) {\n      if (serializedDoc.hasOwnProperty(key)) {\n        let val = serializedDoc[key];\n\n        result[key] = val;\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction deserialize(data) {\n  let result = handleData(data, deserializeDoc.bind(this));\n\n  return result;\n}\n\nfunction deserializeDoc(doc) {\n  let result = {};\n\n  for (let key in this.fields) {\n    if (this.fields.hasOwnProperty(key)) {\n      let val = this.fields[key];\n\n      result[key] = doc[val];\n    }\n  }\n\n  if (typeof this.deserialize === 'function') {\n    let deserializedDoc = this.deserialize(doc);\n\n    for (let key in deserializedDoc) {\n      if (deserializedDoc.hasOwnProperty(key)) {\n        let val = deserializedDoc[key];\n\n        result[key] = val;\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction handleData(data, fn) {\n  let result = null;\n\n  // array of docs\n  if (data && data instanceof Array) {\n    result = data.map((doc) => {\n      return fn(doc);\n    });\n  // single doc\n  } else if (typeof data === 'object') {\n    result = fn(data);\n  } else {\n    throw new Error('Bad argument: ', data);\n  }\n\n  return result;\n}"],"sourceRoot":"/source/"}