{"version":3,"sources":["deser.js"],"names":["deser","config","serialize","bind","deserialize","data","result","handleData","serializeDoc","doc","key","fields","hasOwnProperty","val","undefined","serializedDoc","deserializeDoc","deserializedDoc","fn","Array","map","Error"],"mappings":"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","file":"deser.js","sourcesContent":["function deser(config) {\n  return {\n    serialize: serialize.bind(config),\n    deserialize: deserialize.bind(config),\n  }\n}\n\nfunction serialize(data) {\n  let result = handleData(data, serializeDoc.bind(this));\n\n  return result;\n}\n\nfunction serializeDoc(doc) {\n  let result = {};\n\n  for (let key in this.fields) {\n    if (this.fields.hasOwnProperty(key)) {\n      let val = this.fields[key];\n\n      if (doc[key] !== undefined) {\n        result[val] = doc[key];\n      }\n    }\n  }\n\n  if (typeof this.serialize === 'function') {\n    let serializedDoc = this.serialize(doc);\n\n    for (let key in serializedDoc) {\n      if (serializedDoc.hasOwnProperty(key)) {\n        let val = serializedDoc[key];\n\n        if (val !== undefined) {\n          result[key] = val;\n        }\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction deserialize(data) {\n  let result = handleData(data, deserializeDoc.bind(this));\n\n  return result;\n}\n\nfunction deserializeDoc(doc) {\n  let result = {};\n\n  for (let key in this.fields) {\n    if (this.fields.hasOwnProperty(key)) {\n      let val = this.fields[key];\n\n      if (doc[val] !== undefined) {\n        result[key] = doc[val];\n      }\n    }\n  }\n\n  if (typeof this.deserialize === 'function') {\n    let deserializedDoc = this.deserialize(doc);\n\n    for (let key in deserializedDoc) {\n      if (deserializedDoc.hasOwnProperty(key)) {\n        let val = deserializedDoc[key];\n\n        if (val !== undefined) {\n          result[key] = val;\n        }\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction handleData(data, fn) {\n  let result = null;\n\n  // array of docs\n  if (data && data instanceof Array) {\n    result = data.map((doc) => {\n      return fn(doc);\n    });\n  // single doc\n  } else if (typeof data === 'object') {\n    result = fn(data);\n  } else {\n    throw new Error('Bad argument: ', data);\n  }\n\n  return result;\n}"],"sourceRoot":"/source/"}