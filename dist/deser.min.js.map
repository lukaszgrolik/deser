{"version":3,"sources":["deser.js"],"names":["root","factory","libName","define","amd","module","exports","require","install","this","deser","config","serialize","bind","deserialize","data","result","handleData","serializeDoc","doc","key","fields","hasOwnProperty","val","serializedDoc","deserializeDoc","deserializedDoc","fn","Array","map","Error"],"mappings":"CAAC,SAAUA,EAAMC,GACf,GAAIC,GAAU,OACQ,mBAAXC,SAAyBA,OAAOC,IACzCD,OAAOD,KAAa,WAClB,MAAOD,OAEkB,gBAAXI,SAAuBA,QAAoC,gBAAnBA,QAAOC,SAC/DC,QAAQ,sBAAsBC,UAC9BH,OAAOC,QAAUL,KAEjBD,EAAKE,GAAWD,KAElBQ,KAAM,WAZR,YAAA,SAASC,GAAMC,GACb,OACEC,UAAWA,EAAUC,KAAKF,GAC1BG,YAAaA,EAAYD,KAAKF,IAIlC,QAASC,GAAUG,GACjB,GAAIC,GAASC,EAAWF,EAAMG,EAAaL,KAAKJ,MAEhD,OAAOO,GAGT,QAASE,GAAaC,GACpB,GAAIH,KAEJ,KAAA,GAASI,KAAOX,MAAKY,OACnB,GAAIZ,KAAKY,OAAOC,eAAeF,GAAM,CACnC,GAAIG,GAAMd,KAAKY,OAAOD,EAEtBJ,GAAOO,GAAOJ,EAAIC,GAItB,GAA8B,kBAAnBX,MAAKG,UAA0B,CACxC,GAAIY,GAAgBf,KAAKG,UAAUO,EAEnC,KAAA,GAASC,KAAOI,GACd,GAAIA,EAAcF,eAAeF,GAAM,CACrC,GAAIG,GAAMC,EAAcJ,EAExBJ,GAAOI,GAAOG,GAKpB,MAAOP,GAGT,QAASF,GAAYC,GACnB,GAAIC,GAASC,EAAWF,EAAMU,EAAeZ,KAAKJ,MAElD,OAAOO,GAGT,QAASS,GAAeN,GACtB,GAAIH,KAEJ,KAAA,GAASI,KAAOX,MAAKY,OACnB,GAAIZ,KAAKY,OAAOC,eAAeF,GAAM,CACnC,GAAIG,GAAMd,KAAKY,OAAOD,EAEtBJ,GAAOI,GAAOD,EAAII,GAItB,GAAgC,kBAArBd,MAAKK,YAA4B,CAC1C,GAAIY,GAAkBjB,KAAKK,YAAYK,EAEvC,KAAA,GAASC,KAAOM,GACd,GAAIA,EAAgBJ,eAAeF,GAAM,CACvC,GAAIG,GAAMG,EAAgBN,EAE1BJ,GAAOI,GAAOG,GAKpB,MAAOP,GAGT,QAASC,GAAWF,EAAMY,GACxB,GAAIX,GAAS,IAGb,IAAID,GAAQA,YAAgBa,OAC1BZ,EAASD,EAAKc,IAAI,SAACV,GACjB,MAAOQ,GAAGR,SAGP,CAAA,GAAoB,gBAATJ,GAGhB,KAAM,IAAIe,OAAM,iBAAkBf,EAFlCC,GAASW,EAAGZ,GAKd,MAAOC,GANP,MAAON","file":"deser.min.js","sourcesContent":["function deser(config) {\n  return {\n    serialize: serialize.bind(config),\n    deserialize: deserialize.bind(config),\n  }\n}\n\nfunction serialize(data) {\n  let result = handleData(data, serializeDoc.bind(this));\n\n  return result;\n}\n\nfunction serializeDoc(doc) {\n  let result = {};\n\n  for (let key in this.fields) {\n    if (this.fields.hasOwnProperty(key)) {\n      let val = this.fields[key];\n\n      result[val] = doc[key];\n    }\n  }\n\n  if (typeof this.serialize === 'function') {\n    let serializedDoc = this.serialize(doc);\n\n    for (let key in serializedDoc) {\n      if (serializedDoc.hasOwnProperty(key)) {\n        let val = serializedDoc[key];\n\n        result[key] = val;\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction deserialize(data) {\n  let result = handleData(data, deserializeDoc.bind(this));\n\n  return result;\n}\n\nfunction deserializeDoc(doc) {\n  let result = {};\n\n  for (let key in this.fields) {\n    if (this.fields.hasOwnProperty(key)) {\n      let val = this.fields[key];\n\n      result[key] = doc[val];\n    }\n  }\n\n  if (typeof this.deserialize === 'function') {\n    let deserializedDoc = this.deserialize(doc);\n\n    for (let key in deserializedDoc) {\n      if (deserializedDoc.hasOwnProperty(key)) {\n        let val = deserializedDoc[key];\n\n        result[key] = val;\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction handleData(data, fn) {\n  let result = null;\n\n  // array of docs\n  if (data && data instanceof Array) {\n    result = data.map((doc) => {\n      return fn(doc);\n    });\n  // single doc\n  } else if (typeof data === 'object') {\n    result = fn(data);\n  } else {\n    throw new Error('Bad argument: ', data);\n  }\n\n  return result;\n}"],"sourceRoot":"/source/"}